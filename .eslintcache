[{"/home/hamdi/Desktop/projects/e_commerce-shop/src/index.js":"1","/home/hamdi/Desktop/projects/e_commerce-shop/src/App.js":"2","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/Product/Product.js":"3","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/Product/Styles.js":"4","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/Products.js":"5","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/styles.js":"6","/home/hamdi/Desktop/projects/e_commerce-shop/src/lib/commerce.js":"7","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Navbar/styles.js":"8","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/Cart.js":"9","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Navbar/Navbar.js":"10","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/styles.js":"11","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/CartItem/CartItem.js":"12","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/CartItem/styles.js":"13","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/index.js":"14","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/Checkout/styles.js":"15","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/Checkout/Checkout.js":"16","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/PaymentForm.js":"17","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/AddressForm.js":"18","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/CustomTextField.js":"19","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/Review.js":"20"},{"size":142,"mtime":1608752958997,"results":"21","hashOfConfig":"22"},{"size":2826,"mtime":1609063925922,"results":"23","hashOfConfig":"22"},{"size":1275,"mtime":1608926770940,"results":"24","hashOfConfig":"22"},{"size":372,"mtime":1608886840396,"results":"25","hashOfConfig":"22"},{"size":718,"mtime":1608926597496,"results":"26","hashOfConfig":"22"},{"size":286,"mtime":1608915140447,"results":"27","hashOfConfig":"22"},{"size":118,"mtime":1608920844053,"results":"28","hashOfConfig":"22"},{"size":1564,"mtime":1608911004032,"results":"29","hashOfConfig":"22"},{"size":1823,"mtime":1608977335558,"results":"30","hashOfConfig":"22"},{"size":1393,"mtime":1608935743423,"results":"31","hashOfConfig":"22"},{"size":569,"mtime":1608930509025,"results":"32","hashOfConfig":"22"},{"size":1290,"mtime":1608970314732,"results":"33","hashOfConfig":"22"},{"size":332,"mtime":1608932936167,"results":"34","hashOfConfig":"22"},{"size":218,"mtime":1608978477138,"results":"35","hashOfConfig":"22"},{"size":1157,"mtime":1608977748732,"results":"36","hashOfConfig":"22"},{"size":3868,"mtime":1609063250382,"results":"37","hashOfConfig":"22"},{"size":2691,"mtime":1609058284978,"results":"38","hashOfConfig":"22"},{"size":5446,"mtime":1609004959869,"results":"39","hashOfConfig":"22"},{"size":597,"mtime":1609057358433,"results":"40","hashOfConfig":"22"},{"size":1064,"mtime":1609010509397,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"4s2zhh",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hamdi/Desktop/projects/e_commerce-shop/src/index.js",[],["90","91"],"/home/hamdi/Desktop/projects/e_commerce-shop/src/App.js",[],["92","93"],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/Product/Product.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/Product/Styles.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/Products.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Products/styles.js",[],["94","95"],"/home/hamdi/Desktop/projects/e_commerce-shop/src/lib/commerce.js",[],["96","97"],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Navbar/styles.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/Cart.js",[],["98","99"],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Navbar/Navbar.js",["100","101"],"import React from 'react'\nimport {Link, useLocation} from 'react-router-dom'\nimport {AppBar, Toolbar, IconButton, Badge, Menu, MenuItem, Typography} from '@material-ui/core'\nimport {ShoppingCart} from '@material-ui/icons'\nimport useStyles from \"./styles\"\n\n\nconst Navbar = ({totalItems}) => {\n    const classes = useStyles()\n    const location = useLocation()\n\n       \n    return (\n        <>  \n\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n                <Toolbar >\n                    <Typography component={Link} to=\"/\" varian=\"h6\" className={classes.title} color=\"inherit\">\n                        {/* <img src={logo} alt=\"E-shop\" height=\"25px\" className={classes.image}/> */}\n                        E-shop\n                    </Typography>\n                    <div className={classes.grow} />\n                    {location.pathname === '/' && (\n                    <div className={classes.button}>\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"show cart items\" color=\"inherit\">\n                            <Badge badgeContent={totalItems} color=\"secondary\">\n                                <ShoppingCart />\n\n                            </Badge>\n\n                        </IconButton>\n\n                    </div>)}\n\n                </Toolbar>\n\n            </AppBar>\n            \n        </>\n    )\n}\n\nexport default Navbar\n","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/styles.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/CartItem/CartItem.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/Cart/CartItem/styles.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/index.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/Checkout/styles.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/Checkout/Checkout.js",["102"],"import React, {useState, useEffect} from 'react'\nimport {Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline} from '@material-ui/core'\nimport {Link, useHistory} from 'react-router-dom'\nimport AddressForm from '../AddressForm'\nimport PaymanetForm from '../PaymentForm'\n\nimport useStyles from './styles'\nimport {commerce} from '../../../lib/commerce'\n\n\nconst steps = ['Shipping Address', 'Payment Details']\n\nconst Checkout = ({cart, order, onCaptureCheckout, error}) => {\n\n    const [activeStep, setActiveStep] = useState(0)\n    const [checkoutToken, setCheckoutToken] = useState(null)\n    const [shippingData, setShippingData] = useState({})\n    const classes = useStyles();\n    const history = useHistory()\n    const [ isFinished, setIsFinished]= useState(false)\n\n    useEffect(()=>{\n        const generateToken = async ()=>{\n            try{\n                const token = await commerce.checkout.generateToken(cart.id, {type: \"cart\"})\n                \n                setCheckoutToken(token)\n            } catch(error){\n                history.pushState('/')\n\n            }\n        }\n\n        generateToken()\n    },[cart])\n    const nextStep = ()=> setActiveStep((preActiveStep)=> preActiveStep + 1)\n    const backStep = ()=> setActiveStep((preActiveStep)=> preActiveStep - 1)\n\n    const next = (data)=>{\n        setShippingData(data)\n        nextStep();\n    }\n\n    const timeout = ()=> {\n        setTimeout(()=>{\n            setIsFinished(true)\n        },3000)\n    }\n\n    let Confirmation = ()=> order.customer ?  (\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname} </Typography>\n                <Divider className={classes.divider} />\n                <Typography variant=\"subtitle2\">Order ref: {order.customer_reference} </Typography>\n\n            </div>\n            <br />\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\n        </>\n    ) : isFinished ? (\n\n\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase</Typography>\n                <Divider className={classes.divider} />\n                \n\n            </div>\n            <br />\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\n        </>\n    )\n    \n    \n    \n    \n    \n    : (\n        <div className={classes.spinner}>\n            <CircularProgress />\n\n        </div>\n    ); if(error){\n        <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\n\n        </>\n    }\n\n\n    const Form = ()=> activeStep === 0\n        ? <AddressForm checkoutToken={checkoutToken} next={next}/>\n        : <PaymanetForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\n\n\n    return (\n        <>\n        <CssBaseline />\n            <div className={classes.toolbar} />  \n            <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h4\" align=\"center\">Check out</Typography>\n                        <Stepper className={classes.stepper} activeStep={activeStep}>\n                            {steps.map((step)=>(\n                                <Step key={step}>\n                                    <StepLabel>{step}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                        {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n                    </Paper>\n\n            </main>\n        </>\n    )\n}\n\nexport default Checkout\n","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/PaymentForm.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/AddressForm.js",["103","104"],"import React, {useState, useEffect} from 'react'\nimport {Typography, InputLabel, Select, MenuItem, Button,Grid, }from '@material-ui/core'\nimport {useForm, FormProvider} from 'react-hook-form'\nimport {Link} from 'react-router-dom'\nimport CustomFormField from './CustomTextField'\n\n\nimport {commerce} from '../../lib/commerce'\n\nconst AddressForm = ({checkoutToken, next}) => {\n    const [shippingCountries, setShippingCountries] = useState([])\n    const [shippingCountry, setShippingCountry] = useState('')\n    const [shippingSubDs, setShippingSubDs] = useState([])\n    const [shippingSubD, setShippingSubD] = useState('')\n    const [shippingOptions, setShippingOptions] = useState([])\n    const [shippingOption, setShippingOption] = useState('')\n\n    const methods = useForm();\n    \n    const countries =  Object.entries(shippingCountries).map(([code,name]) => ({id: code, label: name}))\n    const subdivisions =  Object.entries(shippingSubDs).map(([code,name]) => ({id: code, label: name}))\n    const options = shippingOptions.map((sO)=>({id: sO.id, label:`${sO.description} - (${sO.price.formatted_with_symbol})`}))\n    \n\n\n    const fetchShippingCountries = async(checkoutTokenId)=>{\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId)\n\n        \n        setShippingCountries(countries)\n        setShippingCountry(Object.keys(countries)[0])\n    } \n\n    const fetchSubDs = async (countryCode)=>{\n        const {subdivisions} = await commerce.services.localeListSubdivisions(countryCode)\n\n        setShippingSubDs(subdivisions);\n        setShippingSubD(Object.keys(subdivisions)[0]);\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region= null)=>{\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region})\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n\n\n    }\n\n    useEffect(()=>{\n        fetchShippingCountries(checkoutToken.id)\n    },[])\n    useEffect(()=>{\n        if(shippingCountry) fetchSubDs(shippingCountry)\n\n    },[shippingCountry])\n\n\n    useEffect(()=>{\n        if(shippingSubD) fetchShippingOptions(checkoutToken.id, shippingSubD, shippingCountry)\n    },[shippingSubD])\n\n\n    return (\n        <>\n           <Typography variant=\"h6\" gutterBottom >Shipping Address</Typography>\n           <FormProvider {...methods}> \n                <form onSubmit={methods.handleSubmit((data)=> next({ ...data, shippingCountry,shippingSubD, shippingOption}))}>\n                    <Grid container spacing={3}>\n                        <CustomFormField   name=\"firstName\" label=\"First Name\"/>\n                        <CustomFormField   name=\"lastName\" label=\"Last Name\"/>\n                        <CustomFormField   name=\"address1\" label=\"Address\"/>\n                        <CustomFormField   name=\"email\" label=\"Email\"/>\n                        <CustomFormField   name=\"city\" label=\"City\"/>\n                        <CustomFormField   name=\"zip\" label=\"ZIP / Postal Code\"/>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e)=> setShippingCountry(e.target.value)}>\n                                {countries.map((country)=> (\n\n                                <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                        \n                                </MenuItem>\n                                ))}\n\n                            </Select>\n\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubD} fullWidth onChange={(e)=> setShippingSubD(e.target.value)}>\n                            {subdivisions.map((subdivision)=> (\n\n                                <MenuItem\n                                 key={subdivision.id}\n                                 value={subdivision.id}>\n                                 {subdivision.label}\n\n                                </MenuItem>\n                            ))}\n\n                            </Select>\n\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e)=> setShippingOption(e.target.value)}>\n                                {options.map((option)=> (\n\n                                    <MenuItem\n                                    key={option.id}\n                                    value={option.id}>\n                                    {option.label}\n\n                                    </MenuItem>\n                                ))}\n\n                            </Select>\n\n                        </Grid>\n                    </Grid>\n                    <br />\n\n                    <div style={{display:'flex', justifyContent:'space-between'}}>\n                                    <Button component={Link} to='/cart' variant=\"outlined\">Back to cart</Button>\n                                    <Button type='submit' variant=\"contained\" color='primary'>Next</Button>\n                    </div>\n\n\n                </form>\n\n           </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n","/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/CustomTextField.js",[],"/home/hamdi/Desktop/projects/e_commerce-shop/src/components/CheckoutForm/Review.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"105","replacedBy":"111"},{"ruleId":"107","replacedBy":"112"},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"105","replacedBy":"115"},{"ruleId":"107","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":45,"nodeType":"119","messageId":"120","endLine":3,"endColumn":49},{"ruleId":"117","severity":1,"message":"121","line":3,"column":51,"nodeType":"119","messageId":"120","endLine":3,"endColumn":59},{"ruleId":"122","severity":1,"message":"123","line":35,"column":7,"nodeType":"124","endLine":35,"endColumn":13,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":52,"column":7,"nodeType":"124","endLine":52,"endColumn":9,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":61,"column":7,"nodeType":"124","endLine":61,"endColumn":21,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],["130"],["131"],["130"],["131"],["130"],["131"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [cart, history]",{"range":"141","text":"142"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"143","text":"144"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubD]",{"range":"145","text":"146"},[1156,1162],"[cart, history]",[1983,1985],"[checkoutToken.id]",[2212,2226],"[checkoutToken.id, shippingCountry, shippingSubD]"]